{"version":3,"sources":["Models/GetRandomInt.js","Models/Types.js","Models/Mon.js","App.js","serviceWorker.js","index.js"],"names":["max","min","Math","floor","random","types","effectiveness","isAttackSuperEffective","atkType","defType","Mon","name","hp","atk","def","lvl","type","xp","cash","this","currHp","msg","sprite","toLowerCase","entity","hpbuff","getRandomInt","atkbuff","defbuff","opponent","roll","dmg","mult","isSuperEffective","App","useState","hasChosen","setHasChosen","selection","setSelection","hero","setHero","enemy","setEnemy","inEncounter","setInEncounter","onDef","setOnDef","className","onClick","e","o","opp","oppLvl","levelUp","console","log","getOpponent","h","recover","attack","alert","style","textAlign","class","checked","mon1","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0a02f651.chunk.js","sourcesContent":["export default function(max, min=0) {\n    return Math.floor(Math.random() * (max-min+1)) + min ;\n}","// 1 is \"normal effective\" 2 is \"super effective\"\n// 0.5 would be \"not very effective\"\n// 0 would be \"no effect\"\n\nconst types = {\"grass\": 0, \"fire\": 1, \"water\": 2};\nconst effectiveness = [\n    [1, 1, 2],\n    [2, 1, 1],\n    [1, 2, 1]\n];\n\nfunction isAttackSuperEffective(atkType, defType) {\n    return effectiveness[types[atkType]][types[defType]];\n}\n\nexport default isAttackSuperEffective;","import getRandomInt from './GetRandomInt';\nimport isSuperEffective from './Types';\n\nclass Mon {\n\n    constructor(name=\"default\", hp=20, atk=10, def=10, lvl=1, type=\"normal\", xp=0, cash=100) {\n        this.name = name;\n        this.hp = hp;\n        this.currHp = hp;\n        this.atk = atk;\n        this.def = def;\n        this.lvl = lvl;\n        this.type= type;\n        this.xp = xp;\n        this.cash = cash;\n        this.msg = \"Your very own pokemon journey is about to begin!\"\n        this.sprite = `nes-${name.toLowerCase()}`;\n    }\n\n    recover( entity ) {\n        this.name = entity.name;\n        this.hp = entity.hp;\n        this.currHp = entity.currHp;\n        this.atk = entity.atk;\n        this.def = entity.def;\n        this.lvl = entity.lvl;\n        this.type = entity.type;\n        this.xp = entity.xp;\n        this.cash = entity.cash;\n        this.msg = entity.msg;\n        this.sprite = entity.sprite;\n        return this;\n    }\n\n    levelUp(){\n        let hpbuff = getRandomInt(5,1);\n        let atkbuff = getRandomInt(3,1);\n        let defbuff = getRandomInt(3,1);\n        this.hp += hpbuff;\n        this.atk += atkbuff;\n        this.def += defbuff;\n        this.lvl++;\n        this.xp = 0;\n        this.msg = `${this.name} has levelled up and gained ${hpbuff} hp, ${atkbuff} atk, and ${defbuff} def!`;\n        this.currHp = this.hp;\n    }\n\n    attack(opponent) {\n        let roll = getRandomInt(20, 1);\n        let dmg = 0;\n        let mult = 1;\n        this.msg = \"\";\n        if(roll === 20) {\n            // critical hit 1.5 times damage\n            mult = 1.5;\n            this.msg += \"Critital hit! \";\n        }  \n        if(this.lvl > opponent.lvl) {\n            roll += 5;\n        }\n        if( isSuperEffective(this.type, opponent.type) === 2) {\n            this.msg += \"It's super effective! \"\n            mult *= 2;\n        }\n\n        if(roll > 7) {\n            // hit\n            dmg = Math.floor(mult * this.atk - (0.3*opponent.def));\n            this.msg += `${opponent.name} takes ${dmg} damage!`;\n        } else {\n            // miss\n            this.msg = \"Miss!\";\n        }\n        opponent.currHp -= dmg;\n    }\n\n    getHealed() {\n    }\n\n\n}\n\nexport default Mon;","import React, { useState } from 'react';\nimport 'nes.css/css/nes.css';\nimport Mon from './Models/Mon';\nimport getRandomInt from './Models/GetRandomInt';\n\n\nfunction getOpponent(hero) {\n  let roll = getRandomInt(2);\n  let oppLvl = getRandomInt(hero.lvl+1, hero.lvl-3);\n  let opp;\n  if(roll === 2) {\n    opp = new Mon(\"Bulbasaur\", 20, 10, 10, 1, \"grass\");\n  } else if(roll === 1) {\n    opp = new Mon(\"Charmander\", 20, 10, 10, 1, \"fire\");\n  } else {\n    opp = new Mon(\"Squirtle\", 20, 10, 10, 1, \"water\");\n  }\n  while(oppLvl > 1) {\n    opp.levelUp();\n    console.log(opp);\n    oppLvl--;\n  }\n  return opp;\n}\n\n\nfunction App() {\n\n  const [hasChosen, setHasChosen] = useState(false);\n  const [selection, setSelection] = useState(\"Bulbasaur\");\n  const [hero, setHero] = useState({});\n  const [enemy, setEnemy] = useState({});\n  const [inEncounter, setInEncounter] = useState(false);\n  const [onDef, setOnDef] = useState(false);\n\n  const choose = (e) => {\n    setHasChosen(true);\n    let mon1 = new Mon(\"default\");\n    if(selection === \"Bulbasaur\") {\n      mon1 = new Mon(\"Bulbasaur\", 50, 20, 20, 5, \"grass\", 0, 100);\n    } else if(selection === \"Charmander\") {\n      mon1 = new Mon(\"Charmander\", 40, 25, 20, 5, \"fire\", 0, 100);\n    } else {\n      mon1 = new Mon(\"Squirtle\", 40, 20, 25, 5, \"water\", 0, 100);\n    }\n    setHero(mon1);\n  }\n\n  const getEncounter = e => {\n    setInEncounter(true);\n    let o = getOpponent(hero);\n    setEnemy(o);\n    let h = {...hero};\n    h.msg = `You encountered a Level ${o.lvl} ${o.name}!`;\n    setHero(h);\n  }\n\n  const run = e => {\n    setInEncounter(false);\n    let h = {...hero};\n    h.msg = `You bravely ran away!`;\n    setHero(h);\n  }\n\n  const attack = e => {\n    let h = new Mon().recover(hero);\n    let o = new Mon().recover(enemy);\n    h.attack(o);\n    if(o.currHp < 1) {\n      h.msg = `You have defeated the enemy ${o.name}!`;\n      setHero(h);\n      setEnemy(o);\n      setInEncounter(false);\n    } else {\n      setHero(h);\n      setEnemy(o);\n      setOnDef(true);\n    }\n  }\n\n  const getAttacked = e => {\n    let h = new Mon().recover(hero);\n    let o = new Mon().recover(enemy);\n    o.attack(h);\n    if(h.currHp < 1) {\n      alert(\"Sorry you have lost\");\n      setInEncounter(false);\n      setOnDef(false);\n      setHasChosen(false);\n    }\n    h.msg = o.msg;\n    setHero(h);\n    setEnemy(o);\n    setOnDef(false);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"main nes-container is-rounded\">\n        {\n          !hasChosen ?\n          <div>\n            <h1 style={{textAlign: \"center\"}}>Choose your starter!</h1><br />\n            <div className=\"space-evenly\">\n              <i className=\"nes-bulbasaur\" onClick={ e => setSelection(\"Bulbasaur\") }></i>\n              <i className=\"nes-charmander\" onClick={ e => setSelection(\"Charmander\") }></i>\n              <i className=\"nes-squirtle\" onClick={ e => setSelection(\"Squirtle\") }></i>\n            </div><br />\n            <div className=\"space-evenly\">\n              <label onClick={ e => setSelection(\"Bulbasaur\") }>\n                {\n                  selection === \"Bulbasaur\" ?\n                  <input type=\"radio\" class=\"nes-radio\" name=\"answer\" checked /> :\n                  <input type=\"radio\" class=\"nes-radio\" name=\"answer\" />\n                }\n                <span>Bulbasaur</span>\n              </label>\n              <label onClick={ e => setSelection(\"Charmander\") }>\n                {\n                  selection === \"Charmander\" ?\n                  <input type=\"radio\" class=\"nes-radio\" name=\"answer\" checked /> :\n                  <input type=\"radio\" class=\"nes-radio\" name=\"answer\" />\n                }\n                <span>Charmander</span>\n              </label>\n              <label onClick={ e => setSelection(\"Squirtle\") }>\n                {\n                  selection === \"Squirtle\" ?\n                  <input type=\"radio\" class=\"nes-radio\" name=\"answer\" checked /> :\n                  <input type=\"radio\" class=\"nes-radio\" name=\"answer\" />\n                }\n                <span>Squirtle</span>\n              </label>\n            </div>\n            <br /><br />\n            <button className=\"btn-center nes-btn\" onClick={ choose }>Choose</button>\n          </div> :\n          <div>\n\n            <h3>{hero.msg}</h3>\n            <br /><br />\n            <div className=\"space-evenly\">\n              <div className=\"mon\">\n                <i className={hero.sprite + \" hero\"} />\n                <br /><br />\n                <p>Level: {hero.lvl}</p>\n                <p>HP: {hero.currHp}</p>\n              </div>\n              <div className=\"mon\">\n                {!inEncounter ? \n                  <button className=\"nes-btn\" onClick={ getEncounter }>Next</button> : \n                  <>\n                    <i className={enemy.sprite} />\n                    <br /><br />\n                    <p>Level: {enemy.lvl}</p>\n                    <p>HP: {enemy.currHp}</p>\n                  </>\n                }\n              </div>\n            </div>\n            <br /><br />\n            {\n              inEncounter && !onDef ?\n              <div className=\"space-evenly\">\n                <button className=\"nes-btn is-error\" onClick={ attack }>Attack</button>\n                <button className=\"nes-btn is-primary\" onClick={ run }>Run</button>\n              </div>:\n              \"\"\n            }\n            {\n              inEncounter && onDef ?\n              <div className=\"space-evenly\"><button className=\"nes-btn\" onClick={ getAttacked }>Next</button></div> :\n              \"\"\n            }\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}